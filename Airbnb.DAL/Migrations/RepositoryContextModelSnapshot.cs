// <auto-generated />
using System;
using Airbnb.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airbnb.DAL.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Airbnb.DomainModel.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6736344-8a7e-43f4-9a1a-facf460b5f3f"),
                            EndDate = new DateTime(2022, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = new Guid("75518431-3035-4a5d-8f91-d8a6e8f8af47"),
                            StartDate = new DateTime(2022, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("85d2dad8-5ad5-4ad7-ab42-2a883cf0846a")
                        });
                });

            modelBuilder.Entity("Airbnb.DomainModel.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("HasInternet")
                        .HasColumnType("bit");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75518431-3035-4a5d-8f91-d8a6e8f8af47"),
                            Address = "10019, West 53rd Street, New York",
                            HasInternet = true,
                            OwnerId = new Guid("bf62c2cd-aa17-47ea-b575-f8d769966fb9"),
                            Price = 80m
                        },
                        new
                        {
                            Id = new Guid("601ec7d3-b5c9-43c8-8adb-63fdc67bb1bd"),
                            Address = "10014, Perry Street, New York",
                            HasInternet = true,
                            OwnerId = new Guid("bf62c2cd-aa17-47ea-b575-f8d769966fb9"),
                            Price = 100m
                        });
                });

            modelBuilder.Entity("Airbnb.DomainModel.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85d2dad8-5ad5-4ad7-ab42-2a883cf0846a"),
                            Email = "tom@email.com",
                            Name = "Tom"
                        },
                        new
                        {
                            Id = new Guid("bf62c2cd-aa17-47ea-b575-f8d769966fb9"),
                            Email = "bob@email.com",
                            Name = "Bob"
                        });
                });

            modelBuilder.Entity("Airbnb.DomainModel.Models.Reservation", b =>
                {
                    b.HasOne("Airbnb.DomainModel.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airbnb.DomainModel.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Airbnb.DomainModel.Models.Room", b =>
                {
                    b.HasOne("Airbnb.DomainModel.Models.User", "Owner")
                        .WithMany("Rooms")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Airbnb.DomainModel.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Airbnb.DomainModel.Models.User", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
